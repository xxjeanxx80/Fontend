{
  "openapi": "3.0.0",
  "paths": {
    "/hello": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a hello message wrapped in the standard response format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "summary": "Simple hello endpoint to verify the API is running.",
        "tags": [
          "core"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "AppController_getHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the current health information for the service.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "ok"
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Health check endpoint for uptime monitoring.",
        "tags": [
          "core"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/google": {
      "post": {
        "operationId": "AuthController_google",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/facebook": {
      "post": {
        "operationId": "AuthController_facebook",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/customers": {
      "get": {
        "operationId": "CustomerController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "CustomerController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/{id}": {
      "get": {
        "operationId": "CustomerController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "CustomerController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "CustomerController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}/loyalty/points": {
      "post": {
        "operationId": "UsersController_addPoints",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}/loyalty/rank": {
      "get": {
        "operationId": "UsersController_getRank",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/spas": {
      "post": {
        "operationId": "SpasController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      },
      "get": {
        "operationId": "SpasController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      }
    },
    "/spas/{id}": {
      "get": {
        "operationId": "SpasController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      },
      "patch": {
        "operationId": "SpasController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSpaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      },
      "delete": {
        "operationId": "SpasController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      }
    },
    "/spas/{id}/approval": {
      "patch": {
        "operationId": "SpasController_approve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveSpaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "spas"
        ]
      }
    },
    "/services": {
      "post": {
        "operationId": "ServicesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "services"
        ]
      },
      "get": {
        "operationId": "ServicesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "services"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "operationId": "ServicesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "services"
        ]
      },
      "patch": {
        "operationId": "ServicesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "services"
        ]
      },
      "delete": {
        "operationId": "ServicesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "services"
        ]
      }
    },
    "/staff": {
      "post": {
        "operationId": "StaffController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      },
      "get": {
        "operationId": "StaffController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}": {
      "get": {
        "operationId": "StaffController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      },
      "patch": {
        "operationId": "StaffController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStaffDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      },
      "delete": {
        "operationId": "StaffController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/shifts": {
      "post": {
        "operationId": "StaffController_assignShift",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignShiftDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      }
    },
    "/staff/{id}/time-off": {
      "post": {
        "operationId": "StaffController_requestTimeOff",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTimeOffDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "staff"
        ]
      }
    },
    "/bookings": {
      "post": {
        "operationId": "BookingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "bookings"
        ]
      },
      "get": {
        "operationId": "BookingsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/bookings/{id}": {
      "get": {
        "operationId": "BookingsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/bookings/{id}/reschedule": {
      "patch": {
        "operationId": "BookingsController_reschedule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/bookings/{id}/cancel": {
      "patch": {
        "operationId": "BookingsController_cancel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/feedbacks": {
      "post": {
        "operationId": "FeedbacksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "feedbacks"
        ]
      },
      "get": {
        "operationId": "FeedbacksController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "feedbacks"
        ]
      }
    },
    "/feedbacks/booking/{bookingId}": {
      "get": {
        "operationId": "FeedbacksController_findForBooking",
        "parameters": [
          {
            "name": "bookingId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "feedbacks"
        ]
      }
    },
    "/payments": {
      "post": {
        "operationId": "PaymentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/refund": {
      "post": {
        "operationId": "PaymentsController_refund",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundPaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "payments"
        ]
      }
    },
    "/payouts": {
      "post": {
        "operationId": "PayoutsController_request",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPayoutDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "payouts"
        ]
      }
    },
    "/payouts/review": {
      "patch": {
        "operationId": "PayoutsController_review",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPayoutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "payouts"
        ]
      }
    },
    "/payouts/complete": {
      "patch": {
        "operationId": "PayoutsController_complete",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePayoutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "payouts"
        ]
      }
    },
    "/coupons": {
      "post": {
        "operationId": "CouponsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "coupons"
        ]
      },
      "get": {
        "operationId": "CouponsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "coupons"
        ]
      }
    },
    "/coupons/{id}": {
      "get": {
        "operationId": "CouponsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "coupons"
        ]
      },
      "patch": {
        "operationId": "CouponsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "coupons"
        ]
      },
      "delete": {
        "operationId": "CouponsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "coupons"
        ]
      }
    },
    "/campaigns": {
      "post": {
        "operationId": "CampaignsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "campaigns"
        ]
      },
      "get": {
        "operationId": "CampaignsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "campaigns"
        ]
      }
    },
    "/campaigns/{id}": {
      "get": {
        "operationId": "CampaignsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "campaigns"
        ]
      },
      "patch": {
        "operationId": "CampaignsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCampaignDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "campaigns"
        ]
      },
      "delete": {
        "operationId": "CampaignsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "campaigns"
        ]
      }
    },
    "/admin/metrics": {
      "get": {
        "operationId": "AdminController_getMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/spas/{id}/approval": {
      "patch": {
        "operationId": "AdminController_approveSpa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveSpaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/campaigns/{id}/status": {
      "patch": {
        "operationId": "AdminController_updateCampaignStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCampaignStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/logs": {
      "get": {
        "operationId": "AdminController_getLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/reports": {
      "post": {
        "operationId": "ReportsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Reports"
        ]
      },
      "get": {
        "operationId": "ReportsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{id}/resolve": {
      "patch": {
        "operationId": "ReportsController_resolve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveReportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/notifications": {
      "post": {
        "operationId": "NotificationsController_send",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Notifications"
        ]
      }
    },
    "/dashboard/snapshots/latest": {
      "get": {
        "operationId": "DashboardController_latestSnapshot",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/system-settings": {
      "post": {
        "operationId": "SystemSettingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSystemSettingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "SystemSettings"
        ]
      },
      "get": {
        "operationId": "SystemSettingsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "SystemSettings"
        ]
      }
    },
    "/system-settings/{key}": {
      "get": {
        "operationId": "SystemSettingsController_findOne",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "SystemSettings"
        ]
      },
      "patch": {
        "operationId": "SystemSettingsController_update",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemSettingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "SystemSettings"
        ]
      },
      "delete": {
        "operationId": "SystemSettingsController_remove",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "SystemSettings"
        ]
      }
    }
  },
  "info": {
    "title": "Beauty Booking Hub API",
    "description": "Comprehensive API documentation for the Beauty Booking Hub platform.",
    "version": "1.0",
    "contact": {

    }
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "description": "Enter JWT token"
      }
    },
    "schemas": {
      "ApiResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Indicates whether the request was successful."
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully.",
            "description": "Human readable description of the result."
          },
          "data": {
            "type": "object",
            "description": "Optional payload returned by the API."
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "new.user@example.com"
          },
          "password": {
            "type": "string",
            "example": "Sup3rS3cret!"
          },
          "role": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "OWNER",
              "ADMIN"
            ],
            "default": "CUSTOMER"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "Str0ngP@ssw0rd!"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Previously issued refresh token."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Nam Nguyen"
          },
          "email": {
            "type": "string",
            "example": "nam@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+84123456789"
          },
          "address": {
            "type": "string",
            "example": "175 Tay son"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {

        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {

        }
      },
      "CreateSpaDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the spa."
          },
          "description": {
            "type": "string",
            "description": "Optional description of the spa."
          },
          "address": {
            "type": "string",
            "description": "Address of the spa location."
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateSpaDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the spa."
          },
          "description": {
            "type": "string",
            "description": "Optional description of the spa."
          },
          "address": {
            "type": "string",
            "description": "Address of the spa location."
          }
        }
      },
      "ApproveSpaDto": {
        "type": "object",
        "properties": {
          "isApproved": {
            "type": "boolean",
            "description": "Whether the spa is approved by an administrator."
          }
        },
        "required": [
          "isApproved"
        ]
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the service."
          },
          "description": {
            "type": "string",
            "description": "Description of the service."
          },
          "price": {
            "type": "number",
            "description": "Base price for the service."
          },
          "durationMinutes": {
            "type": "number",
            "description": "Duration of the service in minutes."
          },
          "serviceType": {
            "type": "string",
            "enum": [
              "AT_SPA",
              "AT_HOME"
            ],
            "default": "AT_SPA"
          },
          "spaId": {
            "type": "number",
            "description": "Identifier of the spa offering the service."
          }
        },
        "required": [
          "name",
          "price",
          "durationMinutes",
          "serviceType",
          "spaId"
        ]
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the service."
          },
          "description": {
            "type": "string",
            "description": "Description of the service."
          },
          "price": {
            "type": "number",
            "description": "Base price for the service."
          },
          "durationMinutes": {
            "type": "number",
            "description": "Duration of the service in minutes."
          },
          "serviceType": {
            "type": "string",
            "enum": [
              "AT_SPA",
              "AT_HOME"
            ],
            "default": "AT_SPA"
          },
          "spaId": {
            "type": "number",
            "description": "Identifier of the spa offering the service."
          }
        }
      },
      "CreateStaffDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the staff member."
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "spaId": {
            "type": "number",
            "description": "Spa identifier the staff belongs to."
          },
          "skills": {
            "description": "Skill tags assigned to the staff member.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "spaId"
        ]
      },
      "UpdateStaffDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the staff member."
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "spaId": {
            "type": "number",
            "description": "Spa identifier the staff belongs to."
          },
          "skills": {
            "description": "Skill tags assigned to the staff member.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AssignShiftDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Start time of the shift in ISO format."
          },
          "endTime": {
            "type": "string",
            "description": "End time of the shift in ISO format."
          }
        },
        "required": [
          "startTime",
          "endTime"
        ]
      },
      "RequestTimeOffDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "string",
            "description": "Start time of the time off request."
          },
          "endAt": {
            "type": "string",
            "description": "End time of the time off request."
          },
          "reason": {
            "type": "string",
            "description": "Reason for the time off request."
          }
        },
        "required": [
          "startAt",
          "endAt"
        ]
      },
      "CreateBookingDto": {
        "type": "object",
        "properties": {
          "spaId": {
            "type": "number",
            "description": "Spa identifier for the booking."
          },
          "serviceId": {
            "type": "number",
            "description": "Service identifier for the booking."
          },
          "customerId": {
            "type": "number",
            "description": "Customer identifier making the booking."
          },
          "staffId": {
            "type": "number",
            "description": "Staff member assigned to the booking."
          },
          "scheduledAt": {
            "type": "string",
            "description": "Scheduled date and time for the booking."
          },
          "couponCode": {
            "type": "string",
            "description": "Optional coupon code applied to the booking."
          }
        },
        "required": [
          "spaId",
          "serviceId",
          "customerId",
          "scheduledAt"
        ]
      },
      "RescheduleBookingDto": {
        "type": "object",
        "properties": {
          "scheduledAt": {
            "type": "string",
            "description": "New scheduled date and time."
          }
        },
        "required": [
          "scheduledAt"
        ]
      },
      "CancelBookingDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "Optional reason for cancelling the booking."
          }
        }
      },
      "CreateFeedbackDto": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "number",
            "description": "Booking identifier associated with the feedback."
          },
          "customerId": {
            "type": "number",
            "description": "Customer identifier providing the feedback."
          },
          "rating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "bookingId",
          "customerId",
          "rating"
        ]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "method": {
            "type": "string",
            "enum": [
              "CREDIT_CARD",
              "CASH",
              "PAYPAL"
            ]
          },
          "commissionPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "default": 15
          },
          "transactionReference": {
            "type": "string"
          }
        },
        "required": [
          "bookingId",
          "amount",
          "method",
          "commissionPercent"
        ]
      },
      "RefundPaymentDto": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "paymentId"
        ]
      },
      "RequestPayoutDto": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "ownerId",
          "amount"
        ]
      },
      "ReviewPayoutDto": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "number"
          },
          "approved": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "payoutId",
          "approved"
        ]
      },
      "CompletePayoutDto": {
        "type": "object",
        "properties": {
          "payoutId": {
            "type": "number"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "payoutId"
        ]
      },
      "CreateCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "discountPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maxRedemptions": {
            "type": "number"
          },
          "expiresAt": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "code",
          "discountPercent"
        ]
      },
      "UpdateCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "discountPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maxRedemptions": {
            "type": "number"
          },
          "expiresAt": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "CreateCampaignDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discountPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "startsAt": {
            "type": "string"
          },
          "endsAt": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name",
          "discountPercent",
          "startsAt"
        ]
      },
      "UpdateCampaignDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discountPercent": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "startsAt": {
            "type": "string"
          },
          "endsAt": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "UpdateCampaignStatusDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Whether the campaign is active."
          }
        },
        "required": [
          "isActive"
        ]
      },
      "CreateReportDto": {
        "type": "object",
        "properties": {
          "targetType": {
            "type": "string",
            "enum": [
              "SPA",
              "SERVICE",
              "STAFF",
              "FEEDBACK"
            ]
          },
          "targetId": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "targetType",
          "targetId",
          "reason"
        ]
      },
      "ResolveReportDto": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "string"
          }
        }
      },
      "SendNotificationDto": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "enum": [
              "EMAIL",
              "SMS",
              "PUSH"
            ]
          },
          "userId": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "description": "Additional context to send with the notification."
          }
        },
        "required": [
          "channel",
          "message"
        ]
      },
      "CreateSystemSettingDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "UpdateSystemSettingDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    }
  }
}